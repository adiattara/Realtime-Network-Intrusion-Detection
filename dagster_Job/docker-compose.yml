version: "3.7"
services:
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow_server
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_data:/mlflow
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/artifacts
    networks:
      - dags_network
      - network_db_network

  dagster_postgresql:
    image: postgres:14
    container_name: dagster_postgresql
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}

    networks:
      - dags_network
    expose:
      - 5432
    ports:
      - 5436:5432

  dags_server:
    build:
      context: . # Contexte de construction pour l'image Docker
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0" # Adresse IP pour écouter sur toutes les interfaces réseau
      - -p
      - "3000" # Port sur lequel le serveur écoute
    ports:
      - "3000:3000" # Mappe le port 3000 du conteneur au port 3000 de l'hôte

    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
    # Expose le port uniquement aux autres services Docker si nécessaire
    expose:
      - "3000"
    networks:
      - dags_network
      - network_db_network
    depends_on:
      - dagster_postgresql

  docker_dagster_daemon:
    build:
      context: .
    entrypoint:
      - dagster-daemon
      - run
    restart: on-failure
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
    volumes: # Make docker client accessible so we can launch containers using host docker
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dags_network
      - network_db_network
    depends_on:
      - dagster_postgresql


networks:
  dags_network:
    driver: bridge
    name: dags_network

  network_db_network:
      external: true

volumes:
  mlflow_data:
