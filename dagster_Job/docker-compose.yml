version: "3.7"

services:

  dagster_postgresql:
    image: postgres:14
    container_name: dagster_postgresql
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
    networks:
      - dags_network
    expose:
      - 5432
    ports:
      - 5436:5432

  dags_server:
    build:
      context: .
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
    ports:
      - "3000:3000"
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
    expose:
      - "3000"
    networks:
      - dags_network
      - network_db_network
    depends_on:
      - dagster_postgresql

  docker_dagster_daemon:
    build:
      context: .
    entrypoint:
      - dagster-daemon
      - run
    restart: on-failure
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DAGSTER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DAGSTER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${DAGSTER_POSTGRES_DB}
      POSTGRES_HOST: ${DAGSTER_POSTGRES_HOST}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dags_network
      - network_db_network
    depends_on:
      - dagster_postgresql

networks:
  dags_network:
    driver: bridge
    name: dags_network
  network_db_network:
    external: true

# Volumes for persistent storage
# Uncomment and define volumes when needed
# volumes:
#   example_volume:
#     driver: local
